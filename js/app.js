// app.js - InicializaÃ§Ã£o e configuraÃ§Ã£o principal

document.addEventListener('DOMContentLoaded', () => {
    console.log('ðŸš€ M3U8 Player inicializado - VersÃ£o modular sem localStorage');
    
    // Inicializar mÃ³dulos
    ChannelModule.init();
    PlaylistModule.init();
    
    // Configurar event listeners dos botÃµes principais
    setupMainButtons();
    
    // Configurar navegaÃ§Ã£o por teclado
    NavigationModule.setupKeyboardControls();
    
    // Foco inicial nos botÃµes
    const buttons = document.querySelectorAll('.navigable');
    if (buttons.length) {
        buttons[AppState.focusIndex].focus();
    }
    
    // InicializaÃ§Ã£o limpa
    AppState.reset();
    ChannelModule.updateChannelList();
    ChannelModule.showMessage('ðŸ’¡ Selecione uma opÃ§Ã£o acima para comeÃ§ar', 'success');
});

// Configura botÃµes principais
function setupMainButtons() {
    // BotÃ£o Home
    document.getElementById('btnHome').addEventListener('click', () => {
        if (confirm('Voltar para a pÃ¡gina inicial?')) {
            location.href = 'index.html';
        }
    });
    
    // BotÃ£o Minhas Listas (NOVO)
    document.getElementById('btnMinhasListas').addEventListener('click', () => {
        PlaylistModule.showMinhasListasSelector();
    });
    
    // BotÃ£o Playlists Remotas
    document.getElementById('btnLoadPlaylist').addEventListener('click', () => {
        PlaylistModule.showRemotePlaylistSelector();
    });
    
    // BotÃ£o Playlists Locais
    document.getElementById('btnLocal').addEventListener('click', () => {
        PlaylistModule.showPlaylistSelector();
    });
    
    // BotÃ£o URL
    document.getElementById('btnUrl').addEventListener('click', () => {
        PlaylistModule.loadFromUrl();
    });
    
    // BotÃ£o Canal Ãšnico
    document.getElementById('btnSingle').addEventListener('click', () => {
        PlaylistModule.loadSingleChannel();
    });
    
    // BotÃ£o Upload (NOVO)
    document.getElementById('btnUpload').addEventListener('click', () => {
        PlaylistModule.handleFileUpload();
    });
    
    // BotÃµes de voltar
    document.getElementById('btnBackFromRemote').addEventListener('click', () => {
        NavigationModule.backToButtons();
    });
    
    document.getElementById('btnBackFromLocal').addEventListener('click', () => {
        NavigationModule.backToButtons();
    });
}

// UtilitÃ¡rio de debounce
function debounce(func, delay) {
    let timeoutId;
    return function (...args) {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(() => func.apply(this, args), delay);
    };
}